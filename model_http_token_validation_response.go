/*
Podinfo API

Go microservice template for Kubernetes.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package podinfo

import (
	"encoding/json"
)

// checks if the HttpTokenValidationResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpTokenValidationResponse{}

// HttpTokenValidationResponse struct for HttpTokenValidationResponse
type HttpTokenValidationResponse struct {
	ExpiresAt *string `json:"expires_at,omitempty"`
	TokenName *string `json:"token_name,omitempty"`
}

// NewHttpTokenValidationResponse instantiates a new HttpTokenValidationResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpTokenValidationResponse() *HttpTokenValidationResponse {
	this := HttpTokenValidationResponse{}
	return &this
}

// NewHttpTokenValidationResponseWithDefaults instantiates a new HttpTokenValidationResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpTokenValidationResponseWithDefaults() *HttpTokenValidationResponse {
	this := HttpTokenValidationResponse{}
	return &this
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *HttpTokenValidationResponse) GetExpiresAt() string {
	if o == nil || IsNil(o.ExpiresAt) {
		var ret string
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpTokenValidationResponse) GetExpiresAtOk() (*string, bool) {
	if o == nil || IsNil(o.ExpiresAt) {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *HttpTokenValidationResponse) HasExpiresAt() bool {
	if o != nil && !IsNil(o.ExpiresAt) {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given string and assigns it to the ExpiresAt field.
func (o *HttpTokenValidationResponse) SetExpiresAt(v string) {
	o.ExpiresAt = &v
}

// GetTokenName returns the TokenName field value if set, zero value otherwise.
func (o *HttpTokenValidationResponse) GetTokenName() string {
	if o == nil || IsNil(o.TokenName) {
		var ret string
		return ret
	}
	return *o.TokenName
}

// GetTokenNameOk returns a tuple with the TokenName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpTokenValidationResponse) GetTokenNameOk() (*string, bool) {
	if o == nil || IsNil(o.TokenName) {
		return nil, false
	}
	return o.TokenName, true
}

// HasTokenName returns a boolean if a field has been set.
func (o *HttpTokenValidationResponse) HasTokenName() bool {
	if o != nil && !IsNil(o.TokenName) {
		return true
	}

	return false
}

// SetTokenName gets a reference to the given string and assigns it to the TokenName field.
func (o *HttpTokenValidationResponse) SetTokenName(v string) {
	o.TokenName = &v
}

func (o HttpTokenValidationResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpTokenValidationResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExpiresAt) {
		toSerialize["expires_at"] = o.ExpiresAt
	}
	if !IsNil(o.TokenName) {
		toSerialize["token_name"] = o.TokenName
	}
	return toSerialize, nil
}

type NullableHttpTokenValidationResponse struct {
	value *HttpTokenValidationResponse
	isSet bool
}

func (v NullableHttpTokenValidationResponse) Get() *HttpTokenValidationResponse {
	return v.value
}

func (v *NullableHttpTokenValidationResponse) Set(val *HttpTokenValidationResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpTokenValidationResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpTokenValidationResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpTokenValidationResponse(val *HttpTokenValidationResponse) *NullableHttpTokenValidationResponse {
	return &NullableHttpTokenValidationResponse{value: val, isSet: true}
}

func (v NullableHttpTokenValidationResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpTokenValidationResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


