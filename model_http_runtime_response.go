/*
Podinfo API

Go microservice template for Kubernetes.

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package podinfo

import (
	"encoding/json"
)

// checks if the HttpRuntimeResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HttpRuntimeResponse{}

// HttpRuntimeResponse struct for HttpRuntimeResponse
type HttpRuntimeResponse struct {
	Color *string `json:"color,omitempty"`
	Goarch *string `json:"goarch,omitempty"`
	Goos *string `json:"goos,omitempty"`
	Hostname *string `json:"hostname,omitempty"`
	Logo *string `json:"logo,omitempty"`
	Message *string `json:"message,omitempty"`
	NumCpu *string `json:"num_cpu,omitempty"`
	NumGoroutine *string `json:"num_goroutine,omitempty"`
	Revision *string `json:"revision,omitempty"`
	Runtime *string `json:"runtime,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewHttpRuntimeResponse instantiates a new HttpRuntimeResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttpRuntimeResponse() *HttpRuntimeResponse {
	this := HttpRuntimeResponse{}
	return &this
}

// NewHttpRuntimeResponseWithDefaults instantiates a new HttpRuntimeResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttpRuntimeResponseWithDefaults() *HttpRuntimeResponse {
	this := HttpRuntimeResponse{}
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *HttpRuntimeResponse) SetColor(v string) {
	o.Color = &v
}

// GetGoarch returns the Goarch field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetGoarch() string {
	if o == nil || IsNil(o.Goarch) {
		var ret string
		return ret
	}
	return *o.Goarch
}

// GetGoarchOk returns a tuple with the Goarch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetGoarchOk() (*string, bool) {
	if o == nil || IsNil(o.Goarch) {
		return nil, false
	}
	return o.Goarch, true
}

// HasGoarch returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasGoarch() bool {
	if o != nil && !IsNil(o.Goarch) {
		return true
	}

	return false
}

// SetGoarch gets a reference to the given string and assigns it to the Goarch field.
func (o *HttpRuntimeResponse) SetGoarch(v string) {
	o.Goarch = &v
}

// GetGoos returns the Goos field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetGoos() string {
	if o == nil || IsNil(o.Goos) {
		var ret string
		return ret
	}
	return *o.Goos
}

// GetGoosOk returns a tuple with the Goos field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetGoosOk() (*string, bool) {
	if o == nil || IsNil(o.Goos) {
		return nil, false
	}
	return o.Goos, true
}

// HasGoos returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasGoos() bool {
	if o != nil && !IsNil(o.Goos) {
		return true
	}

	return false
}

// SetGoos gets a reference to the given string and assigns it to the Goos field.
func (o *HttpRuntimeResponse) SetGoos(v string) {
	o.Goos = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *HttpRuntimeResponse) SetHostname(v string) {
	o.Hostname = &v
}

// GetLogo returns the Logo field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetLogo() string {
	if o == nil || IsNil(o.Logo) {
		var ret string
		return ret
	}
	return *o.Logo
}

// GetLogoOk returns a tuple with the Logo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetLogoOk() (*string, bool) {
	if o == nil || IsNil(o.Logo) {
		return nil, false
	}
	return o.Logo, true
}

// HasLogo returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasLogo() bool {
	if o != nil && !IsNil(o.Logo) {
		return true
	}

	return false
}

// SetLogo gets a reference to the given string and assigns it to the Logo field.
func (o *HttpRuntimeResponse) SetLogo(v string) {
	o.Logo = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *HttpRuntimeResponse) SetMessage(v string) {
	o.Message = &v
}

// GetNumCpu returns the NumCpu field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetNumCpu() string {
	if o == nil || IsNil(o.NumCpu) {
		var ret string
		return ret
	}
	return *o.NumCpu
}

// GetNumCpuOk returns a tuple with the NumCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetNumCpuOk() (*string, bool) {
	if o == nil || IsNil(o.NumCpu) {
		return nil, false
	}
	return o.NumCpu, true
}

// HasNumCpu returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasNumCpu() bool {
	if o != nil && !IsNil(o.NumCpu) {
		return true
	}

	return false
}

// SetNumCpu gets a reference to the given string and assigns it to the NumCpu field.
func (o *HttpRuntimeResponse) SetNumCpu(v string) {
	o.NumCpu = &v
}

// GetNumGoroutine returns the NumGoroutine field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetNumGoroutine() string {
	if o == nil || IsNil(o.NumGoroutine) {
		var ret string
		return ret
	}
	return *o.NumGoroutine
}

// GetNumGoroutineOk returns a tuple with the NumGoroutine field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetNumGoroutineOk() (*string, bool) {
	if o == nil || IsNil(o.NumGoroutine) {
		return nil, false
	}
	return o.NumGoroutine, true
}

// HasNumGoroutine returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasNumGoroutine() bool {
	if o != nil && !IsNil(o.NumGoroutine) {
		return true
	}

	return false
}

// SetNumGoroutine gets a reference to the given string and assigns it to the NumGoroutine field.
func (o *HttpRuntimeResponse) SetNumGoroutine(v string) {
	o.NumGoroutine = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetRevision() string {
	if o == nil || IsNil(o.Revision) {
		var ret string
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetRevisionOk() (*string, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given string and assigns it to the Revision field.
func (o *HttpRuntimeResponse) SetRevision(v string) {
	o.Revision = &v
}

// GetRuntime returns the Runtime field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetRuntime() string {
	if o == nil || IsNil(o.Runtime) {
		var ret string
		return ret
	}
	return *o.Runtime
}

// GetRuntimeOk returns a tuple with the Runtime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetRuntimeOk() (*string, bool) {
	if o == nil || IsNil(o.Runtime) {
		return nil, false
	}
	return o.Runtime, true
}

// HasRuntime returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasRuntime() bool {
	if o != nil && !IsNil(o.Runtime) {
		return true
	}

	return false
}

// SetRuntime gets a reference to the given string and assigns it to the Runtime field.
func (o *HttpRuntimeResponse) SetRuntime(v string) {
	o.Runtime = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *HttpRuntimeResponse) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HttpRuntimeResponse) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *HttpRuntimeResponse) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *HttpRuntimeResponse) SetVersion(v string) {
	o.Version = &v
}

func (o HttpRuntimeResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HttpRuntimeResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.Goarch) {
		toSerialize["goarch"] = o.Goarch
	}
	if !IsNil(o.Goos) {
		toSerialize["goos"] = o.Goos
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.Logo) {
		toSerialize["logo"] = o.Logo
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.NumCpu) {
		toSerialize["num_cpu"] = o.NumCpu
	}
	if !IsNil(o.NumGoroutine) {
		toSerialize["num_goroutine"] = o.NumGoroutine
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Runtime) {
		toSerialize["runtime"] = o.Runtime
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableHttpRuntimeResponse struct {
	value *HttpRuntimeResponse
	isSet bool
}

func (v NullableHttpRuntimeResponse) Get() *HttpRuntimeResponse {
	return v.value
}

func (v *NullableHttpRuntimeResponse) Set(val *HttpRuntimeResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableHttpRuntimeResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableHttpRuntimeResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttpRuntimeResponse(val *HttpRuntimeResponse) *NullableHttpRuntimeResponse {
	return &NullableHttpRuntimeResponse{value: val, isSet: true}
}

func (v NullableHttpRuntimeResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttpRuntimeResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


